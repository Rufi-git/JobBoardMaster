@using JobBoardTemplate.Models;
@model RegisterModel
@{
    ViewData["Title"] = "Register panel";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

@section registerCss{
    <link rel="stylesheet" href="~/Content/css/register.css">
}
<div class="row h-80 justify-content-center">
    <div class="col-lg-8 col-12">
        <div id="auth-left">
            <div class="wrapper">
                <h1 class="auth-title text-center">Sign Up</h1>
                <p class="auth-subtitle mb-5 text-center">Input your data to register to our website.</p>
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        <p class="mb-1">Choose your profile</p>
                        <div class="col-md-10 mb-5">
                            @Html.TextBoxFor(model => model.Image, new { type = "file", accept = "image/png, image/jpeg", @style = "" })
                        </div>
                    </div>
                    <div class="wrapper d-flex justify-content-between gap-5">
                        <div class="left" style="width: 500px">
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control form-control-xl", placeholder = "Name" })

                                @Html.ValidationMessageFor(x => x.Name)
                            </div>
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.TextBoxFor(x => x.Surname, new { @class = "form-control form-control-xl", placeholder = "Surname" })

                                @Html.ValidationMessageFor(x => x.Surname)
                            </div>
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control form-control-xl", placeholder = "Username" })

                                @Html.ValidationMessageFor(x => x.UserName)
                            </div>
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control form-control-xl", placeholder = "Email" })

                                @Html.ValidationMessageFor(x => x.Email)
                            </div>
                        </div>

                        <div class="right" style="width: 500px">
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.PasswordFor(x => x.Password, new { @class = "form-control form-control-xl", placeholder = "Password" })

                                @Html.ValidationMessageFor(x => x.Password)
                            </div>
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control form-control-xl", placeholder = "Confirm password" })

                                @Html.ValidationMessageFor(x => x.ConfirmPassword)
                            </div>
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.EditorFor(x => x.Age, new { htmlAttributes = new { @class = "form-control form-control-xl", placeholder = "Age" } })

                                @Html.ValidationMessageFor(x => x.Age)
                            </div>
                            <div class="form-group position-relative has-icon-left mb-4">
                                @Html.DropDownListFor(x => x.Gender, new SelectList(Enum.GetValues(typeof(Gender))),
                                                        new { @class = "form-control form-control-xl", placeholder = "Select Gender" })
                                @Html.ValidationMessageFor(x => x.Gender)
                            </div>
                        </div>
                    </div>

                    <button class="btn text-white btn-block btn-lg shadow-lg mt-5 signup-btn">Sign Up</button>
                }
                <div class="text-center mt-3 text-lg fs-4">
                    <p class='text-gray-600'>
                        Already have an account?
                        @Html.ActionLink("Login.", "Login", "Account", new { @class = "font-bold login-btn" })
                    </p>
                    <p>
                        Do you want to be in the
                        @Html.ActionLink("Testimonial?", "Testimonial", "AppUser", new { @class = "font-bold login-btn" })
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

